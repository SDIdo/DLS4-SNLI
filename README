Deep Learning for Texts and Sequences
Assignment 4 - NLI Implementation
Students: Ido Nathan 30572782
	  Tzach Cohen 208930842
########################

Train Part:

Run: python3 train_model.py train_path dev_path gloves_path validate_per_batches

Explanation:
		train_path is the path of the training dataset file
		dev_path is the path of the devset file
		gloves_path is the path for the gloves vectors (for best performance use glove.840B.300d)
		validate_per_batches per how many batches would you like to validate the model 
		
		NOTE: snli data of proper .txt files are required to be placed locally, same about gloves.
		https://nlp.stanford.edu/projects/snli/snli_1.0.zip | https://nlp.stanford.edu/projects/glove/ 
		If you want to run the program without arguments please organize your data files in a data folder
		that contains the files: snli_1.0_dev.jsonl, snli_1.0_test.jsonl, snli_1.0_train.jsonl, glove.840B.300d.txt
		Should look like this: train_model.py pred_model.py data

Relevant Files:
train_model.py

Prints: Every 'validate_per_batches' batches will print performance on dev in current epoch

Outputs:
        In addition to that - saves a trained model ready to be used for prediction
        named: dev_acc_<value>_model
        Note: Non architecture portable!
        Saved in CPU can be used in CPU, saved in CUDA will serve in CUDA
	Note: If you Save model in torch 1.7.1 environment it cannot be used in torch 1.8.

Graphs: produces train dev loss and accuracy graphs

##########################################################

Part Predict:

Run: python3 test_model.py test_path model_path indexed_words_path

Explanation:
    
	test_path is the path of the test dataset file
	saved_model_path is the path of the trained model file (rename it to 'model' if you want to run without arguments)
	indexed_words_path is a dictionary containing indexed words (was saved automatically in train stage)
	If you want to run the program without arguments please organize your data files in a data folder
	that contains the files: snli_1.0_test.jsonl
	Should look like this: train_model.py pred_model.py indexed words.json model


Relevant Files:
test_model.py
train_model.py

Prints: None

Outputs: Predictions about input test file.
         The file will be called test.pred
	 Structure: premise | hypothesis | lable

###############################################################
